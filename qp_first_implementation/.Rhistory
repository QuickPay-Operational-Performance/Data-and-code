action_date_year_quarter|
0|
contract_award_unique_key,
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
# time fixed effects also included in the following specs
controls_time_task_fe=felm(winsorized_delay~treat_i+
project_quarter_tercile+
post_t:treat_i+
contract_financing_i+
post_t:contract_financing_i+
post_t:treat_i:contract_financing_i+
winsorized_initial_duration_in_days_i+
winsorized_initial_budget_i+
number_of_offers_received+
post_t:winsorized_initial_duration_in_days_i+
post_t:winsorized_initial_budget_i+
post_t:number_of_offers_received|
product_or_service_code+action_date_year_quarter|
0|
contract_award_unique_key,
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
controls_and_all_fe=felm(winsorized_delay~treat_i+
project_quarter_tercile+
post_t:treat_i+
contract_financing_i+
post_t:contract_financing_i+
post_t:treat_i:contract_financing_i+
winsorized_initial_duration_in_days_i+
winsorized_initial_budget_i+
number_of_offers_received+
post_t:winsorized_initial_duration_in_days_i+
post_t:winsorized_initial_budget_i+
post_t:number_of_offers_received|
recipient_duns+product_or_service_code+action_date_year_quarter|
0|
contract_award_unique_key,
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
vars.order=c('treat_i',
'post_t',
'treat_i:post_t',
'contract_financing_i',
'post_t:contract_financing_i',
'treat_i:post_t:contract_financing_i')
contract_financing_table=stargazer(baseline_reg,
controls_and_no_fe,
controls_and_time_fe,
controls_time_task_fe,
controls_and_all_fe,
digits=2,
digits.extra=2,
title = "Financial constraints and QuickPay reform",
dep.var.labels="$DelayRate_{it}$  ",
dep.var.caption = "",
order=paste0("^", vars.order , "$"),
covariate.labels = c("$Treat_i$",
"$Post_t$",
"$Treat_i \\times Post_t$",
"$CF_i$",
"$Post_t \\times CF_i$",
"$Post_t \\times CF_i \\times Treat_i$",
"Constant"),
object.names=FALSE,
model.numbers=TRUE,
font.size = "small",
omit.stat=c("f", "ser"),
column.sep.width = "-2pt",
add.lines = list(
c("Duration, Budget, Bids",rep("No",1),rep("Yes",4)),
c("$Post_t \\times $  (Duration, Budget, Bids)",rep("No",1),rep("Yes",4)),                           c("Project age",rep("No",1),rep("Yes",4)),
c("Year-Quarter fixed effects",rep("No",2),rep("Yes",3)),
c("Task fixed effects",rep("No",3),rep("Yes",2)),
c("Contractor fixed effects",rep("No",4),rep("Yes",1))),
omit=c('winsorized_initial_duration_in_days_i',
'winsorized_initial_budget_i',
'number_of_offers_received',
'post_t:winsorized_initial_duration_in_days_i',
'post_t:winsorized_initial_budget_i',
'post_t:number_of_offers_received',
'project_quarter_tercile'),
table.placement = "H",
style="default",
notes=c("Each observation is a project-quarter.",
"SEs are robust and clustered at the project level."),
header=F)
# contract_financing_tex=make_tex_pieces(contract_financing_table)
# # Write to file
# write(contract_financing_tex,
#       paste0(tables_folder,"/contract_financing_table.tex"))
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(tidyverse)
library(dplyr)
library(pryr)
library(lfe) # linear fixed effects
library(DescTools)
library(zoo) # for year quarter
library(stargazer)
library(broom)
library(data.table)
library(scales)
# tables_folder=paste0(getwd(),'/R_tables')
# figures_folder=paste0(getwd(),'/R_figures')
data_folder='~/Dropbox/data_quickpay/qp_data/'
# read quarterly resampled data
df=fread(paste0(data_folder,'resampled_qp_data/qp_resampled_data_fy10_to_fy12.csv'))
# specify date columns
date_cols=c("action_date_year_quarter",
"last_reported_start_date",
"last_reported_end_date")
df[,(date_cols):= lapply(.SD, as.Date), .SDcols = date_cols]
# restrict to quarter ending June 30, 2012
df=subset(df,as.Date(action_date_year_quarter)<max(as.Date(df$action_date_year_quarter)))
# data is truncated at July 1, 2012 --
# so quarter ending Sept 30, 2012 will only have values as of July 1, 2012
df_first_reported=fread(paste0(data_folder,'qp_data_first_reported.csv'))
# contains time-invariant contract characteristics -- info when contract first appeared in the data
# Assign variables: Delay, Winsorized Delay, Post_t, Treat_i
# sort by contract id and date
df=df[order(contract_award_unique_key,
action_date_year_quarter)]
# determine quarter-to-quarter delay
df[,delay:=ifelse(contract_award_unique_key==lag(contract_award_unique_key,1),
last_reported_end_date-lag(last_reported_end_date,1),NaN)]
# winsorize quarter-to-quarter delay
df[,winsorized_delay:=Winsorize(delay,na.rm=TRUE)]
#Post_t: A dummy that period t is post-treatment
df[,post_t:=ifelse(action_date_year_quarter>as.Date("2011-04-27"),1,0)]
# quickpay implemented on 27 April 2011. So all quarters starting 30 June 2011 will be in post-period
#Treat_i: A dummy that contract i is in the treatment group
df[,treat_i:=ifelse(business_type=="S",1,0)]
# quickpay was implemented for small business contracts
# Project age is a highly skewed variable
# assign number of quarters since project started: "project age" in some sense
df[, project_quarter_age := rowid(contract_award_unique_key)]
df[,project_quarter_tercile:=as.factor(ntile(project_quarter_age,3))]
# Including it as fixed effects doesn't work because projects in treatment and control are not always in same "tercile" while controling for everything else.
# ContractFinancing_i
df_first_reported[,contract_financing_i:=ifelse(!is.null(contract_financing_code)&
!contract_financing_code%in%c("Z", ""),1,0)]
# Competition_i
df_first_reported[,competitively_awarded_i:=ifelse(!is.null(extent_competed_code)&
!extent_competed_code%in%c("","G","B", "C","E"),1,0)]
# InitialDuration_i
df_first_reported[,initial_duration_in_days_i:=
as.numeric(
as.Date(period_of_performance_current_end_date)-
as.Date(period_of_performance_start_date))]
df_first_reported[,winsorized_initial_duration_in_days_i:=
Winsorize(as.numeric(
as.Date(period_of_performance_current_end_date)-
as.Date(period_of_performance_start_date)),na.rm=T)]
# InitialBudget_i
df_first_reported[,winsorized_initial_budget_i:=
Winsorize(base_and_all_options_value,na.rm=T)]
# Change type to string modification number
df_first_reported[,modification_number:=as.character(modification_number)]
select_cols=c("contract_award_unique_key",
"recipient_duns",
"naics_code",
"product_or_service_code",
"modification_number",
"number_of_offers_received",
"contract_financing_i",
"competitively_awarded_i",
"period_of_performance_start_date",
"winsorized_initial_duration_in_days_i",
"winsorized_initial_budget_i")
# not necessary but speed efficient to set keys
setkey(df_first_reported[,..select_cols],
contract_award_unique_key)
setkey(df,contract_award_unique_key)
# Combine all variables into dataframe needed for regression
reg_df=merge(df,
df_first_reported[,..select_cols],
all.x = TRUE, # keep values in df, add columns of df_first_reported_cols
by=c("contract_award_unique_key"))
# only keep observations with mod num zero
reg_df=subset(reg_df,modification_number=="0")
# sort by contract id and date (just to be doubly sure)
reg_df=reg_df[order(contract_award_unique_key,
action_date_year_quarter)]
reg_df[,period_of_performance_start_date:=as.Date(period_of_performance_start_date)]
# get project duration as of last quarter in the denominator
reg_df[,relative_delay:=delay/(1+initial_duration_in_days_i)]
select_cols=c("contract_award_unique_key",
"recipient_duns",
"naics_code",
"product_or_service_code",
"modification_number",
"number_of_offers_received",
"contract_financing_i",
"competitively_awarded_i",
"period_of_performance_start_date",
"initial_duration_in_days_i",
"winsorized_initial_duration_in_days_i",
"winsorized_initial_budget_i")
# not necessary but speed efficient to set keys
setkey(df_first_reported[,..select_cols],
contract_award_unique_key)
# Combine all variables into dataframe needed for regression
reg_df=merge(df,
df_first_reported[,..select_cols],
all.x = TRUE, # keep values in df, add columns of df_first_reported_cols
by=c("contract_award_unique_key"))
# only keep observations with mod num zero
reg_df=subset(reg_df,modification_number=="0")
# sort by contract id and date (just to be doubly sure)
reg_df=reg_df[order(contract_award_unique_key,
action_date_year_quarter)]
reg_df[,period_of_performance_start_date:=as.Date(period_of_performance_start_date)]
# get project duration as of last quarter in the denominator
reg_df[,relative_delay:=delay/(1+initial_duration_in_days_i)]
reg_df[,wins_relative_delay:=Winsorize(relative_delay,na.rm=T)]
mean_delay=reg_df[!is.na(wins_relative_delay)
& action_date_year_quarter<=as.Date('2012-06-30'),
mean(wins_relative_delay),
by = c('action_date_year_quarter','business_type')]
mean_delay[,year_quarter:=format(action_date_year_quarter,"%Y-%b")]
mean_delay=mean_delay[order(action_date_year_quarter,business_type)]
ggplot(mean_delay, aes(x=year_quarter,
y=V1,
group = business_type,
shape=business_type,
linetype=business_type))+
geom_line() +
scale_x_discrete(limits=mean_delay$year_quarter)+
geom_point(size=3)+
labs(x="Year-Quarter", y = "Average delay rate per quarter  ")+
annotate("text", label = "QuickPay\n implemented", x = 8, y = 0.5,color="dimgrey")+
geom_vline(xintercept = 10.2, linetype="solid",
color = "gray", size=1.5)+
scale_shape_discrete(name  ="Business Size",
breaks=c("O", "S"),
labels=c("Large", "Small"))+
scale_linetype_discrete(name="Business Size",
breaks=c("O", "S"),
labels=c("Large", "Small"))+
theme(axis.text.x = element_text(angle = 90),
axis.line = element_line(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.text = element_text(size=12))
# ggsave(path=figures_folder,
#        width = 8,
#        height = 4,
#        filename = "trends_figure.png")
large_baseline=subset(mean_delay,year_quarter=='2010-Mar' & business_type=="O")$V1
small_baseline=subset(mean_delay,year_quarter=='2010-Mar' & business_type=="S")$V1
mean_delay[,V2:=ifelse(business_type=="S",V1*100/small_baseline,V1*100/large_baseline)]
ggplot(mean_delay, aes(x=year_quarter,
y=V2,
group = business_type,
shape=business_type,
linetype=business_type))+
geom_line() +
scale_x_discrete(limits=mean_delay$year_quarter)+
geom_point(size=3)+
labs(x="Year-Quarter", y = "Average delay rate per quarter
\n (normalized by delay in 2010-Mar) ")+
annotate("text", label = "QuickPay\n implemented", x = 8, y = 190,color="dimgrey")+
geom_vline(xintercept = 10.2, linetype="solid",
color = "gray", size=1.5)+
scale_shape_discrete(name  ="Business Size",
breaks=c("O", "S"),
labels=c("Large", "Small"))+
scale_linetype_discrete(name="Business Size",
breaks=c("O", "S"),
labels=c("Large", "Small"))+
theme(axis.text.x = element_text(angle = 90),
axis.line = element_line(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.text = element_text(size=12))
# ggsave(path=figures_folder,
#        width = 8,
#        height = 4,
#        filename = "trends_normalized.png")
# Baseline Regressions
baseline_reg=felm(wins_relative_delay~treat_i+
post_t:treat_i+
post_t|
0| # no fixed effects
0| # no IV
contract_award_unique_key, # clustered at project level
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
# time fixed effects also included in the following specs
controls_and_no_fe=felm(wins_relative_delay~treat_i+
post_t:treat_i+
post_t+
project_quarter_tercile+
winsorized_initial_budget_i+
number_of_offers_received+
post_t:winsorized_initial_budget_i+
post_t:number_of_offers_received|
0|
0|
contract_award_unique_key,
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
# time fixed effects also included in the following specs
controls_and_time_fe=felm(wins_relative_delay~treat_i+
post_t:treat_i+
project_quarter_tercile+
winsorized_initial_budget_i+
number_of_offers_received+
post_t:winsorized_initial_budget_i+
post_t:number_of_offers_received|
action_date_year_quarter|
0|
contract_award_unique_key,
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
controls_time_task_fe=felm(wins_relative_delay~treat_i+
post_t:treat_i+
project_quarter_tercile+
winsorized_initial_budget_i+
number_of_offers_received+
post_t:winsorized_initial_budget_i+
post_t:number_of_offers_received|
product_or_service_code+action_date_year_quarter|
0|
contract_award_unique_key,
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
controls_and_all_fe=felm(wins_relative_delay~treat_i+
post_t:treat_i+
project_quarter_tercile+
winsorized_initial_budget_i+
number_of_offers_received+
post_t:winsorized_initial_budget_i+
post_t:number_of_offers_received|
recipient_duns+product_or_service_code+action_date_year_quarter|
0|
contract_award_unique_key,
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
base_table<-stargazer(baseline_reg,
controls_and_no_fe,
controls_and_time_fe,
controls_time_task_fe,
controls_and_all_fe,
title = "Effect of QuickPay on project delay rates",
dep.var.labels="$RelativeDelay_{it}$",
dep.var.caption = "",
covariate.labels = c("$Treat_i$","$Post_t$","$Treat_i \\times Post_t$","Constant"),
object.names=FALSE,
model.numbers=TRUE,
digits=2,
digits.extra=2,
font.size = "small",
omit.stat=c("f", "ser"),
column.sep.width = "-2pt",
add.lines = list(c("Budget, Bids","No",rep("Yes",4)),
c("$Post_t \\times$  (Budget, Bids)","No",rep("Yes",4)),
c("Project age","No",rep("Yes",4)),
c("Year-Quarter fixed effects",rep("No",2),rep("Yes",3)),
c("Task fixed effects",rep("No",3),rep("Yes",2)),
c("Contractor fixed effects",rep("No",4),rep("Yes",1))),
omit=c('winsorized_initial_budget_i',
'number_of_offers_received',
'post_t:winsorized_initial_budget_i',
'post_t:number_of_offers_received',
'project_quarter_tercile'),
table.placement = "H",
style="default",
notes=c("Each observation is a project-quarter.",
"SEs are robust and clustered at the project level."),
header=F)
# base_table_tex=make_tex_pieces(base_table)
# # Write to file
# write(base_table_tex,
#       paste0(tables_folder,"/base_table.tex"))
# Baseline Regressions
baseline_reg=felm(wins_relative_delay~treat_i+
post_t:treat_i+
post_t+
contract_financing_i+
post_t:contract_financing_i+
post_t:treat_i:contract_financing_i|
0| # no fixed effects
0| # no IV
contract_award_unique_key, # clustered at project level
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
controls_and_no_fe=felm(wins_relative_delay~treat_i+
post_t+
project_quarter_tercile+
post_t:treat_i+
contract_financing_i+
post_t:contract_financing_i+
post_t:treat_i:contract_financing_i+
winsorized_initial_budget_i+
number_of_offers_received+
post_t:winsorized_initial_budget_i+
post_t:number_of_offers_received|
0|
0|
contract_award_unique_key,
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
controls_and_time_fe=felm(wins_relative_delay~treat_i+
project_quarter_tercile+
post_t:treat_i+
contract_financing_i+
post_t:contract_financing_i+
post_t:treat_i:contract_financing_i+
winsorized_initial_budget_i+
number_of_offers_received+
post_t:winsorized_initial_budget_i+
post_t:number_of_offers_received|
action_date_year_quarter|
0|
contract_award_unique_key,
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
# time fixed effects also included in the following specs
controls_time_task_fe=felm(wins_relative_delay~treat_i+
project_quarter_tercile+
post_t:treat_i+
contract_financing_i+
post_t:contract_financing_i+
post_t:treat_i:contract_financing_i+
winsorized_initial_budget_i+
number_of_offers_received+
post_t:winsorized_initial_budget_i+
post_t:number_of_offers_received|
product_or_service_code+action_date_year_quarter|
0|
contract_award_unique_key,
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
controls_and_all_fe=felm(wins_relative_delay~treat_i+
project_quarter_tercile+
post_t:treat_i+
contract_financing_i+
post_t:contract_financing_i+
post_t:treat_i:contract_financing_i+
winsorized_initial_budget_i+
number_of_offers_received+
post_t:winsorized_initial_budget_i+
post_t:number_of_offers_received|
recipient_duns+product_or_service_code+action_date_year_quarter|
0|
contract_award_unique_key,
data=reg_df,
exactDOF = TRUE,
cmethod = "reghdfe")
vars.order=c('treat_i',
'post_t',
'treat_i:post_t',
'contract_financing_i',
'post_t:contract_financing_i',
'treat_i:post_t:contract_financing_i')
contract_financing_table=stargazer(baseline_reg,
controls_and_no_fe,
controls_and_time_fe,
controls_time_task_fe,
controls_and_all_fe,
digits=2,
digits.extra=2,
title = "Financial constraints and QuickPay reform",
dep.var.labels="$RelativeDelay_{it}$",
dep.var.caption = "",
order=paste0("^", vars.order , "$"),
covariate.labels = c("$Treat_i$",
"$Post_t$",
"$Treat_i \\times Post_t$",
"$CF_i$",
"$Post_t \\times CF_i$",
"$Post_t \\times CF_i \\times Treat_i$",
"Constant"),
object.names=FALSE,
model.numbers=TRUE,
font.size = "small",
omit.stat=c("f", "ser"),
column.sep.width = "-2pt",
add.lines = list(
c("Budget, Bids",rep("No",1),rep("Yes",4)),
c("$Post_t \\times $  (Budget, Bids)",rep("No",1),rep("Yes",4)),                           c("Project age",rep("No",1),rep("Yes",4)),
c("Year-Quarter fixed effects",rep("No",2),rep("Yes",3)),
c("Task fixed effects",rep("No",3),rep("Yes",2)),
c("Contractor fixed effects",rep("No",4),rep("Yes",1))),
omit=c('winsorized_initial_budget_i',
'number_of_offers_received',
'post_t:winsorized_initial_budget_i',
'post_t:number_of_offers_received',
'project_quarter_tercile'),
table.placement = "H",
style="default",
notes=c("Each observation is a project-quarter.",
"SEs are robust and clustered at the project level."),
header=F)
# contract_financing_tex=make_tex_pieces(contract_financing_table)
# # Write to file
# write(contract_financing_tex,
#       paste0(tables_folder,"/contract_financing_table.tex"))
